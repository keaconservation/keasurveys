-- enums

create type "public"."activity" as enum ('W', 'S', 'C', 'H', 'X');

create type "public"."purpose" as enum ('tunnel', 'fwf', 'hunt', 'guide', 'trap', 'permolat', 'tramp', 'research', 'kea', 'hut', 'cycle', 'other');

create type "public"."status" as enum ('new', 'public');

-- tables

create table "public"."gridTile" (
    "id" character varying(7) not null,
    "min" geometry(Point,2193) not null,
    "max" geometry(Point,2193) not null,
    "polygon" geometry(Polygon,4326) not null,
    "centroid" geometry(Point,4326) not null,
    "neighbours" character varying(7)[] not null
);


alter table "public"."gridTile" enable row level security;

create table "public"."observer" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "email" text not null
);


alter table "public"."observer" enable row level security;

create table "public"."survey" (
    "id" bigint generated by default as identity not null,
    "createdAt" timestamp with time zone not null default now(),
    "date" date not null,
    "comments" text,
    "maxFlockSize" bigint,
    "status" status not null default 'new'::status,
    "observerId" bigint not null,
    "purpose" purpose
);


alter table "public"."survey" enable row level security;

create table "public"."surveyHour" (
    "id" bigint generated by default as identity not null,
    "hour" integer not null,
    "kea" boolean not null,
    "activity" activity not null,
    "surveyId" bigint,
    "gridTileId" character varying
);


alter table "public"."surveyHour" enable row level security;

-- indexes

CREATE UNIQUE INDEX "gridTile_pkey" ON public."gridTile" USING btree (id);

CREATE UNIQUE INDEX observer_pkey ON public.observer USING btree (id);

CREATE UNIQUE INDEX "surveyHour_pkey" ON public."surveyHour" USING btree (id);

CREATE UNIQUE INDEX "survey_observerId_key" ON public.survey USING btree ("observerId");

CREATE UNIQUE INDEX survey_pkey ON public.survey USING btree (id);

-- primary/foreign keys

alter table "public"."gridTile" add constraint "gridTile_pkey" PRIMARY KEY using index "gridTile_pkey";

alter table "public"."observer" add constraint "observer_pkey" PRIMARY KEY using index "observer_pkey";

alter table "public"."survey" add constraint "survey_pkey" PRIMARY KEY using index "survey_pkey";

alter table "public"."surveyHour" add constraint "surveyHour_pkey" PRIMARY KEY using index "surveyHour_pkey";

alter table "public"."survey" add constraint "public_survey_observerId_fkey" FOREIGN KEY ("observerId") REFERENCES observer(id) ON DELETE RESTRICT not valid;

alter table "public"."survey" validate constraint "public_survey_observerId_fkey";

alter table "public"."surveyHour" add constraint "public_surveyHour_gridTileId_fkey" FOREIGN KEY ("gridTileId") REFERENCES "gridTile"(id) ON DELETE RESTRICT not valid;

alter table "public"."surveyHour" validate constraint "public_surveyHour_gridTileId_fkey";

alter table "public"."surveyHour" add constraint "public_surveyHour_surveyId_fkey" FOREIGN KEY ("surveyId") REFERENCES survey(id) ON DELETE RESTRICT not valid;

alter table "public"."surveyHour" validate constraint "public_surveyHour_surveyId_fkey";

-- other constraints

alter table "public"."survey" add constraint "survey_maxFlockSize_check" CHECK (("maxFlockSize" >= 0)) not valid;

alter table "public"."survey" validate constraint "survey_maxFlockSize_check";

alter table "public"."survey" add constraint "survey_observerId_key" UNIQUE using index "survey_observerId_key";